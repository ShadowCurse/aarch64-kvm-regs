use std::fmt::Display;

pub const KVM_REG_SIZE_SHIFT: u32 = 52;
pub const KVM_REG_SIZE_MASK: u64 = 67553994410557440;

pub fn reg_size(reg_id: u64) -> usize {
    2_usize.pow(((reg_id & KVM_REG_SIZE_MASK) >> KVM_REG_SIZE_SHIFT) as u32)
}

#[derive(Debug, Clone, Copy)]
pub enum Access {
    RW,
    RO,
    WO,
    Unspecified,
}

#[allow(unused)]
#[derive(Debug, Clone, Copy)]
pub struct Aarch64KvmRegister {
    pub op0: u64,
    pub op1: u64,
    pub crn: u64,
    pub crm: u64,
    pub op2: u64,
    pub access: Access,
    pub mnemonic: &'static str,
    pub register: &'static str,
    pub reg_id: u64,
}

impl Display for Aarch64KvmRegister {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        f.write_fmt(format_args!("op0: {}, op1: {}, crn: {}, crm: {}, op2: {}, access: {:?}, mnemonic: {}, register: {}, reg_id: {}",
                                 self.op0, self.op1, self.crn, self.crm, self.op2, self.access, self.mnemonic, self.register, self.reg_id))
    }
}

impl Aarch64KvmRegister {
    //https://elixir.bootlin.com/linux/v4.20.17/source/arch/arm64/include/uapi/asm/kvm.h#L203
    pub const KVM_REG_ARM64: u64 = 6917529027641081856;
    pub const KVM_REG_SIZE_U64: u64 = 13510798882111488;
    pub const KVM_REG_ARM64_SYSREG: u32 = 1245184;
    pub const KVM_REG_ARM64_SYSREG_OP0_MASK: u32 = 49152;
    pub const KVM_REG_ARM64_SYSREG_OP0_SHIFT: u32 = 14;
    pub const KVM_REG_ARM64_SYSREG_OP1_MASK: u32 = 14336;
    pub const KVM_REG_ARM64_SYSREG_OP1_SHIFT: u32 = 11;
    pub const KVM_REG_ARM64_SYSREG_CRN_MASK: u32 = 1920;
    pub const KVM_REG_ARM64_SYSREG_CRN_SHIFT: u32 = 7;
    pub const KVM_REG_ARM64_SYSREG_CRM_MASK: u32 = 120;
    pub const KVM_REG_ARM64_SYSREG_CRM_SHIFT: u32 = 3;
    pub const KVM_REG_ARM64_SYSREG_OP2_MASK: u32 = 7;
    pub const KVM_REG_ARM64_SYSREG_OP2_SHIFT: u32 = 0;

    pub const fn new(
        op0: u64,
        op1: u64,
        crn: u64,
        crm: u64,
        op2: u64,
        access: Access,
        mnemonic: &'static str,
        register: &'static str,
    ) -> Self {
        let reg_id = Self::reg_id(op0, op1, crn, crm, op2);
        Self {
            op0,
            op1,
            crn,
            crm,
            op2,
            access,
            mnemonic,
            register,
            reg_id,
        }
    }

    pub const fn reg_id(op0: u64, op1: u64, crn: u64, crm: u64, op2: u64) -> u64 {
        Self::KVM_REG_ARM64
            | Self::KVM_REG_SIZE_U64
            | Self::KVM_REG_ARM64_SYSREG as u64
            | ((op0 << Self::KVM_REG_ARM64_SYSREG_OP0_SHIFT)
                & Self::KVM_REG_ARM64_SYSREG_OP0_MASK as u64)
            | ((op1 << Self::KVM_REG_ARM64_SYSREG_OP1_SHIFT)
                & Self::KVM_REG_ARM64_SYSREG_OP1_MASK as u64)
            | ((crn << Self::KVM_REG_ARM64_SYSREG_CRN_SHIFT)
                & Self::KVM_REG_ARM64_SYSREG_CRN_MASK as u64)
            | ((crm << Self::KVM_REG_ARM64_SYSREG_CRM_SHIFT)
                & Self::KVM_REG_ARM64_SYSREG_CRM_MASK as u64)
            | ((op2 << Self::KVM_REG_ARM64_SYSREG_OP2_SHIFT)
                & Self::KVM_REG_ARM64_SYSREG_OP2_MASK as u64)
    }
}

// Data taken from ARMv8 ARM DDI 0487A / System instruction encodings for non-Debug System register accesses
#[rustfmt::skip]
pub const AARCH64_KVM_REGISTERS: [Aarch64KvmRegister; 553] = [
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b000, Access::RO, "MIDR_EL1", "MIDR_EL1"), 
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b000, Access::RO, "MIDR_EL1", "VPIDR_EL2"), 
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b000, Access::RO, "VPIDR_EL2", "MIDR_EL1"), 
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b000, Access::RO, "VPIDR_EL2", "VPIDR_EL2"), 
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b101, Access::RO, "MPIDR_EL1", "MPIDR_EL1"), 
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b101, Access::RO, "MPIDR_EL1", "VMPIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b101, Access::RO, "VMPIDR_EL2", "MPIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b101, Access::RO, "VMPIDR_EL2", "VMPIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0000, 0b110, Access::RO, "REVIDR_EL1", "REVIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b000, Access::RO, "ID_PFR0_EL1", "ID_PFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b001, Access::RO, "ID_PFR1_EL1", "ID_PFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b010, Access::RO, "ID_DFR0_EL1", "ID_DFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b011, Access::RO, "ID_AFR0_EL1", "ID_AFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b100, Access::RO, "ID_MMFR0_EL1", "ID_MMFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b101, Access::RO, "ID_MMFR1_EL1", "ID_MMFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b110, Access::RO, "ID_MMFR2_EL1", "ID_MMFR2_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0001, 0b111, Access::RO, "ID_MMFR3_EL1", "ID_MMFR3_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b000, Access::RO, "ID_ISAR0_EL1", "ID_ISAR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b001, Access::RO, "ID_ISAR1_EL1", "ID_ISAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b010, Access::RO, "ID_ISAR2_EL1", "ID_ISAR2_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b011, Access::RO, "ID_ISAR3_EL1", "ID_ISAR3_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b100, Access::RO, "ID_ISAR4_EL1", "ID_ISAR4_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b101, Access::RO, "ID_ISAR5_EL1", "ID_ISAR5_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b110, Access::RO, "ID_MMFR4_EL1", "ID_MMFR4_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0010, 0b111, Access::RO, "ID_ISAR6_EL1", "ID_ISAR6_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0011, 0b000, Access::RO, "MVFR0_EL1", "MVFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0011, 0b001, Access::RO, "MVFR1_EL1", "MVFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0011, 0b010, Access::RO, "MVFR2_EL1", "MVFR2_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0011, 0b100, Access::RO, "ID_PFR2_EL1", "ID_PFR2_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0011, 0b101, Access::RO, "ID_DFR1_EL1", "ID_DFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0011, 0b110, Access::RO, "ID_MMFR5_EL1", "ID_MMFR5_EL1"),
    // 11 000 0000 0011 n RO, for
    // n={3, 7}
    // Reserved, RAZ. -
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0100, 0b000, Access::RO, "ID_AA64PFR0_EL1", "ID_AA64PFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0100, 0b001, Access::RO, "ID_AA64PFR1_EL1", "ID_AA64PFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0100, 0b100, Access::RO, "ID_AA64ZFR0_EL1", "ID_AA64ZFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0100, 0b101, Access::RO, "ID_AA64SMFR0_EL1", "ID_AA64SMFR0_EL1"),
    // 11 000 0000 0100 n RO, for
    // n={2, 3,
    // 6, 7}
    // Reserved, RAZ. -
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0101, 0b000, Access::RO, "ID_AA64DFR0_EL1", "ID_AA64DFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0101, 0b001, Access::RO, "ID_AA64DFR1_EL1", "ID_AA64DFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0101, 0b100, Access::RO, "ID_AA64AFR0_EL1", "ID_AA64AFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0101, 0b101, Access::RO, "ID_AA64AFR1_EL1", "ID_AA64AFR1_EL1"),
    // 11 000 0000 0101 n RO, for
    // n={2, 3,
    // 6, 7}
    // Reserved, RAZ. -
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0110, 0b000, Access::RO, "ID_AA64ISAR0_EL1", "ID_AA64ISAR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0110, 0b001, Access::RO, "ID_AA64ISAR1_EL1", "ID_AA64ISAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0110, 0b010, Access::RO, "ID_AA64ISAR2_EL1", "ID_AA64ISAR2_EL1"),
    // 11 000 0000 0110 n RO, for
    // n=3-7
    // Reserved, RAZ. -
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0111, 0b000, Access::RO, "ID_AA64MMFR0_EL1", "ID_AA64MMFR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0111, 0b001, Access::RO, "ID_AA64MMFR1_EL1", "ID_AA64MMFR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0000, 0b0111, 0b010, Access::RO, "ID_AA64MMFR2_EL1", "ID_AA64MMFR2_EL1"),
    // 11 000 0000 0111 n RO, for
    // n=3-7
    // Reserved, RAZ. -
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL1", "SCTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL1", "SCTLR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL2", "SCTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL2", "SCTLR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b001, Access::RW, "ACTLR_EL1", "ACTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b010, Access::RW, "CPACR_EL1", "CPACR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b010, Access::RW, "CPACR_EL1", "CPTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b010, Access::RW, "CPTR_EL2", "CPACR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b010, Access::RW, "CPTR_EL2", "CPTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b101, Access::RW, "RGSR_EL1", "RGSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0000, 0b110, Access::RW, "GCR_EL1", "GCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL1", "ZCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL1", "ZCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL2", "ZCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL2", "ZCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b001, Access::RW, "TRFCR_EL1", "TRFCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b001, Access::RW, "TRFCR_EL1", "TRFCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b001, Access::RW, "TRFCR_EL2", "TRFCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b001, Access::RW, "TRFCR_EL2", "TRFCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b100, Access::RW, "SMPRI_EL1", "SMPRI_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL1", "SMCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL1", "SMCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL2", "SMCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL2", "SMCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL1", "TTBR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL1", "TTBR0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL2", "TTBR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL2", "TTBR0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b001, Access::RW, "TTBR1_EL1", "TTBR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b001, Access::RW, "TTBR1_EL1", "TTBR1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b001, Access::RW, "TTBR1_EL2", "TTBR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b001, Access::RW, "TTBR1_EL2", "TTBR1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL1", "TCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL1", "TCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL2", "TCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL2", "TCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0001, 0b000, Access::RW, "APIAKeyLo_EL1", "APIAKeyLo_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0001, 0b001, Access::RW, "APIAKeyHi_EL1", "APIAKeyHi_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0001, 0b010, Access::RW, "APIBKeyLo_EL1", "APIBKeyLo_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0001, 0b011, Access::RW, "APIBKeyHi_EL1", "APIBKeyHi_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0010, 0b000, Access::RW, "APDAKeyLo_EL1", "APDAKeyLo_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0010, 0b001, Access::RW, "APDAKeyHi_EL1", "APDAKeyHi_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0010, 0b010, Access::RW, "APDBKeyLo_EL1", "APDBKeyLo_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0010, 0b011, Access::RW, "APDBKeyHi_EL1", "APDBKeyHi_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0011, 0b000, Access::RW, "APGAKeyLo_EL1", "APGAKeyLo_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0010, 0b0011, 0b001, Access::RW, "APGAKeyHi_EL1", "APGAKeyHi_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL1", "SPSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL1", "SPSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL2", "SPSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL2", "SPSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL1", "ELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL1", "ELR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL2", "ELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL2", "ELR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0001, 0b000, Access::RW, "SP_EL0", "SP_EL0"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0010, 0b000, Access::Unspecified, "SPSel", "-"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0010, 0b010, Access::Unspecified, "CurrentEL", "-"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0010, 0b011, Access::Unspecified, "PAN", "-"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0010, 0b100, Access::Unspecified, "UAO", "-"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0011, 0b000, Access::Unspecified, "ALLINT", "-"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0110, 0b000, Access::RW, "ICC_PMR_EL1", "ICC_PMR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0110, 0b000, Access::RW, "ICC_PMR_EL1", "ICV_PMR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0110, 0b000, Access::RW, "ICV_PMR_EL1", "ICC_PMR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0100, 0b0110, 0b000, Access::RW, "ICV_PMR_EL1", "ICV_PMR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL1", "AFSR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL1", "AFSR0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL2", "AFSR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL2", "AFSR0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL1", "AFSR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL1", "AFSR1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL2", "AFSR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL2", "AFSR1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL1", "ESR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL1", "ESR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL2", "ESR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL2", "ESR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0011, 0b000, Access::RO, "ERRIDR_EL1", "ERRIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0011, 0b001, Access::RW, "ERRSELR_EL1", "ERRSELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b000, Access::RO, "ERXFR_EL1", "ERXFR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b001, Access::RW, "ERXCTLR_EL1", "ERXCTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b010, Access::RW, "ERXSTATUS_EL1", "ERXSTATUS_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b011, Access::RW, "ERXADDR_EL1", "ERXADDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b100, Access::RO, "ERXPFGF_EL1", "ERXPFGF_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b101, Access::RW, "ERXPFGCTL_EL1", "ERXPFGCTL_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0100, 0b110, Access::RW, "ERXPFGCDN_EL1", "ERXPFGCDN_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0101, 0b000, Access::RW, "ERXMISC0_EL1", "ERXMISC0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0101, 0b001, Access::RW, "ERXMISC1_EL1", "ERXMISC1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0101, 0b010, Access::RW, "ERXMISC2_EL1", "ERXMISC2_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0101, 0b011, Access::RW, "ERXMISC3_EL1", "ERXMISC3_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL1", "TFSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL1", "TFSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL2", "TFSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL2", "TFSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0101, 0b0110, 0b001, Access::RW, "TFSRE0_EL1", "TFSRE0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL1", "FAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL1", "FAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL2", "FAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL2", "FAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b0111, 0b0100, 0b000, Access::RW, "PAR_EL1", "PAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b000, Access::RW, "PMSCR_EL1", "PMSCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b000, Access::RW, "PMSCR_EL1", "PMSCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b000, Access::RW, "PMSCR_EL2", "PMSCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b000, Access::RW, "PMSCR_EL2", "PMSCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b001, Access::RW, "PMSNEVFR_EL1", "PMSNEVFR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b010, Access::RW, "PMSICR_EL1", "PMSICR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b011, Access::RW, "PMSIRR_EL1", "PMSIRR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b100, Access::RW, "PMSFCR_EL1", "PMSFCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b101, Access::RW, "PMSEVFR_EL1", "PMSEVFR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b110, Access::RW, "PMSLATFR_EL1", "PMSLATFR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1001, 0b111, Access::RO, "PMSIDR_EL1", "PMSIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1010, 0b000, Access::RW, "PMBLIMITR_EL1", "PMBLIMITR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1010, 0b001, Access::RW, "PMBPTR_EL1", "PMBPTR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1010, 0b011, Access::RW, "PMBSR_EL1", "PMBSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1010, 0b111, Access::RO, "PMBIDR_EL1", "PMBIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b000, Access::RW, "TRBLIMITR_EL1", "TRBLIMITR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b001, Access::RW, "TRBPTR_EL1", "TRBPTR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b010, Access::RW, "TRBBASER_EL1", "TRBBASER_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b011, Access::RW, "TRBSR_EL1", "TRBSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b100, Access::RW, "TRBMAR_EL1", "TRBMAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b110, Access::RW, "TRBTRG_EL1", "TRBTRG_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1011, 0b111, Access::RO, "TRBIDR_EL1", "TRBIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1110, 0b001, Access::RW, "PMINTENSET_EL1", "PMINTENSET_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1110, 0b010, Access::RW, "PMINTENCLR_EL1", "PMINTENCLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1001, 0b1110, 0b110, Access::RO, "PMMIR_EL1", "PMMIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL1", "MAIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL1", "MAIR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL2", "MAIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL2", "MAIR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL1", "AMAIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL1", "AMAIR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL2", "AMAIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL2", "AMAIR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0100, 0b000, Access::RW, "LORSA_EL1", "LORSA_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0100, 0b001, Access::RW, "LOREA_EL1", "LOREA_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0100, 0b010, Access::RW, "LORN_EL1", "LORN_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0100, 0b011, Access::RW, "LORC_EL1", "LORC_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0100, 0b100, Access::RO, "MPAMIDR_EL1", "MPAMIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0100, 0b111, Access::RO, "LORID_EL1", "LORID_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0101, 0b000, Access::RW, "MPAM1_EL1", "MPAM1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0101, 0b000, Access::RW, "MPAM1_EL1", "MPAM2_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0101, 0b000, Access::RW, "MPAM2_EL2", "MPAM1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0101, 0b000, Access::RW, "MPAM2_EL2", "MPAM2_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1010, 0b0101, 0b001, Access::RW, "MPAM0_EL1", "MPAM0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL1", "VBAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL1", "VBAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL2", "VBAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL2", "VBAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0000, 0b001, Access::RO, "RVBAR_EL1", "RVBAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0000, 0b010, Access::RW, "RMR_EL1", "RMR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0001, 0b000, Access::RO, "ISR_EL1", "ISR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0001, 0b001, Access::RW, "DISR_EL1", "DISR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0001, 0b001, Access::RW, "DISR_EL1", "VDISR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0001, 0b001, Access::RW, "VDISR_EL2", "DISR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b0001, 0b001, Access::RW, "VDISR_EL2", "VDISR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b000, Access::RO, "ICC_IAR0_EL1", "ICC_IAR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b000, Access::RO, "ICC_IAR0_EL1", "ICV_IAR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b000, Access::RO, "ICV_IAR0_EL1", "ICC_IAR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b000, Access::RO, "ICV_IAR0_EL1", "ICV_IAR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b001, Access::WO, "ICC_EOIR0_EL1", "ICC_EOIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b001, Access::WO, "ICC_EOIR0_EL1", "ICV_EOIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b001, Access::WO, "ICV_EOIR0_EL1", "ICC_EOIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b001, Access::WO, "ICV_EOIR0_EL1", "ICV_EOIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b010, Access::RO, "ICC_HPPIR0_EL1", "ICC_HPPIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b010, Access::RO, "ICC_HPPIR0_EL1", "ICV_HPPIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b010, Access::RO, "ICV_HPPIR0_EL1", "ICC_HPPIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b010, Access::RO, "ICV_HPPIR0_EL1", "ICV_HPPIR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b011, Access::RW, "ICC_BPR0_EL1", "ICC_BPR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b011, Access::RW, "ICC_BPR0_EL1", "ICV_BPR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b011, Access::RW, "ICV_BPR0_EL1", "ICC_BPR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1000, 0b011, Access::RW, "ICV_BPR0_EL1", "ICV_BPR0_EL1"),
    // 11 000 1100 1000 1:m[1:0] RW ICC_AP0R<n>_EL1 ICC_AP0R_EL1[]
    // 11 000 1100 1000 1:m[1:0] RW ICC_AP0R<n>_EL1 ICV_AP0R_EL1[]
    // 11 000 1100 1000 1:m[1:0] RW ICV_AP0R<n>_EL1 ICC_AP0R_EL1[]
    // 11 000 1100 1000 1:m[1:0] RW ICV_AP0R<n>_EL1 ICV_AP0R_EL1[]
    // 11 000 1100 1001 0:m[1:0] RW ICC_AP1R<n>_EL1 ICC_AP1R_EL1[]
    // 11 000 1100 1001 0:m[1:0] RW ICC_AP1R<n>_EL1 ICC_AP1R_EL1_NS[]
    // 11 000 1100 1001 0:m[1:0] RW ICC_AP1R<n>_EL1 ICC_AP1R_EL1_S[]
    // 11 000 1100 1001 0:m[1:0] RW ICC_AP1R<n>_EL1 ICV_AP1R_EL1[]
    // 11 000 1100 1001 0:m[1:0] RW ICV_AP1R<n>_EL1 ICC_AP1R_EL1[]
    // 11 000 1100 1001 0:m[1:0] RW ICV_AP1R<n>_EL1 ICC_AP1R_EL1_NS[]
    // 11 000 1100 1001 0:m[1:0] RW ICV_AP1R<n>_EL1 ICC_AP1R_EL1_S[]
    // 11 000 1100 1001 0:m[1:0] RW ICV_AP1R<n>_EL1 ICV_AP1R_EL1[]
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1001, 0b101, Access::RO, "ICC_NMIAR1_EL1", "ICC_NMIAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1001, 0b101, Access::RO, "ICC_NMIAR1_EL1", "ICV_NMIAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1001, 0b101, Access::RO, "ICV_NMIAR1_EL1", "ICC_NMIAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1001, 0b101, Access::RO, "ICV_NMIAR1_EL1", "ICV_NMIAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b001, Access::WO, "ICC_DIR_EL1", "ICC_DIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b001, Access::WO, "ICC_DIR_EL1", "ICV_DIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b001, Access::WO, "ICV_DIR_EL1", "ICC_DIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b001, Access::WO, "ICV_DIR_EL1", "ICV_DIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b011, Access::RO, "ICC_RPR_EL1", "ICC_RPR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b011, Access::RO, "ICC_RPR_EL1", "ICV_RPR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b011, Access::RO, "ICV_RPR_EL1", "ICC_RPR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b011, Access::RO, "ICV_RPR_EL1", "ICV_RPR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b101, Access::WO, "ICC_SGI1R_EL1", "ICC_SGI1R_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b110, Access::WO, "ICC_ASGI1R_EL1", "ICC_ASGI1R_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1011, 0b111, Access::WO, "ICC_SGI0R_EL1", "ICC_SGI0R_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b000, Access::RO, "ICC_IAR1_EL1", "ICC_IAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b000, Access::RO, "ICC_IAR1_EL1", "ICV_IAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b000, Access::RO, "ICV_IAR1_EL1", "ICC_IAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b000, Access::RO, "ICV_IAR1_EL1", "ICV_IAR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b001, Access::WO, "ICC_EOIR1_EL1", "ICC_EOIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b001, Access::WO, "ICC_EOIR1_EL1", "ICV_EOIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b001, Access::WO, "ICV_EOIR1_EL1", "ICC_EOIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b001, Access::WO, "ICV_EOIR1_EL1", "ICV_EOIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b010, Access::RO, "ICC_HPPIR1_EL1", "ICC_HPPIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b010, Access::RO, "ICC_HPPIR1_EL1", "ICV_HPPIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b010, Access::RO, "ICV_HPPIR1_EL1", "ICC_HPPIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b010, Access::RO, "ICV_HPPIR1_EL1", "ICV_HPPIR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICC_BPR1_EL1", "ICC_BPR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICC_BPR1_EL1", "ICC_BPR1_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICC_BPR1_EL1", "ICC_BPR1_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICC_BPR1_EL1", "ICV_BPR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICV_BPR1_EL1", "ICC_BPR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICV_BPR1_EL1", "ICC_BPR1_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICV_BPR1_EL1", "ICC_BPR1_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b011, Access::RW, "ICV_BPR1_EL1", "ICV_BPR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICC_CTLR_EL1", "ICC_CTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICC_CTLR_EL1", "ICC_CTLR_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICC_CTLR_EL1", "ICC_CTLR_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICC_CTLR_EL1", "ICV_CTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICV_CTLR_EL1", "ICC_CTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICV_CTLR_EL1", "ICC_CTLR_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICV_CTLR_EL1", "ICC_CTLR_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b100, Access::RW, "ICV_CTLR_EL1", "ICV_CTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b101, Access::RW, "ICC_SRE_EL1", "ICC_SRE_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b101, Access::RW, "ICC_SRE_EL1", "ICC_SRE_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b101, Access::RW, "ICC_SRE_EL1", "ICC_SRE_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b110, Access::RW, "ICC_IGRPEN0_EL1", "ICC_IGRPEN0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b110, Access::RW, "ICC_IGRPEN0_EL1", "ICV_IGRPEN0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b110, Access::RW, "ICV_IGRPEN0_EL1", "ICC_IGRPEN0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b110, Access::RW, "ICV_IGRPEN0_EL1", "ICV_IGRPEN0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICC_IGRPEN1_EL1", "ICC_IGRPEN1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICC_IGRPEN1_EL1", "ICC_IGRPEN1_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICC_IGRPEN1_EL1", "ICC_IGRPEN1_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICC_IGRPEN1_EL1", "ICV_IGRPEN1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICV_IGRPEN1_EL1", "ICC_IGRPEN1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICV_IGRPEN1_EL1", "ICC_IGRPEN1_EL1_NS"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICV_IGRPEN1_EL1", "ICC_IGRPEN1_EL1_S"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1100, 0b1100, 0b111, Access::RW, "ICV_IGRPEN1_EL1", "ICV_IGRPEN1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b001, Access::RW, "CONTEXTIDR_EL1", "CONTEXTIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b001, Access::RW, "CONTEXTIDR_EL1", "CONTEXTIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b001, Access::RW, "CONTEXTIDR_EL2", "CONTEXTIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b001, Access::RW, "CONTEXTIDR_EL2", "CONTEXTIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b100, Access::RW, "TPIDR_EL1", "TPIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b101, Access::RW, "ACCDATA_EL1", "ACCDATA_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL1", "SCXTNUM_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL1", "SCXTNUM_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL2", "SCXTNUM_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL2", "SCXTNUM_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1110, 0b0001, 0b000, Access::RW, "CNTHCTL_EL2", "CNTHCTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1110, 0b0001, 0b000, Access::RW, "CNTHCTL_EL2", "CNTKCTL_EL1"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1110, 0b0001, 0b000, Access::RW, "CNTKCTL_EL1", "CNTHCTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b000, 0b1110, 0b0001, 0b000, Access::RW, "CNTKCTL_EL1", "CNTKCTL_EL1"),
    Aarch64KvmRegister::new(0b11, 0b001, 0b0000, 0b0000, 0b000, Access::RO, "CCSIDR_EL1", "CCSIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b001, 0b0000, 0b0000, 0b001, Access::RO, "CLIDR_EL1", "CLIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b001, 0b0000, 0b0000, 0b010, Access::RO, "CCSIDR2_EL1", "CCSIDR2_EL1"),
    Aarch64KvmRegister::new(0b11, 0b001, 0b0000, 0b0000, 0b100, Access::RO, "GMID_EL1", "GMID_EL1"),
    Aarch64KvmRegister::new(0b11, 0b001, 0b0000, 0b0000, 0b110, Access::RO, "SMIDR_EL1", "SMIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b001, 0b0000, 0b0000, 0b111, Access::RO, "AIDR_EL1", "AIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b010, 0b0000, 0b0000, 0b000, Access::RW, "CSSELR_EL1", "CSSELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0000, 0b0000, 0b001, Access::RO, "CTR_EL0", "CTR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0000, 0b0000, 0b111, Access::RO, "DCZID_EL0", "DCZID_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0010, 0b0100, 0b000, Access::RO, "RNDR", "RNDR"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0010, 0b0100, 0b001, Access::RO, "RNDRRS", "RNDRRS"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0010, 0b000, Access::Unspecified, "NZCV", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0010, 0b001, Access::Unspecified, "DAIF", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0010, 0b010, Access::Unspecified, "SVCR", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0010, 0b101, Access::Unspecified, "DIT", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0010, 0b110, Access::Unspecified, "SSBS", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0010, 0b111, Access::Unspecified, "TCO", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0100, 0b000, Access::RW, "FPCR", "FPCR"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0100, 0b001, Access::RW, "FPSR", "FPSR"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0101, 0b000, Access::RW, "DSPSR_EL0", "DSPSR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b0100, 0b0101, 0b001, Access::RW, "DLR_EL0", "DLR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b000, Access::RW, "PMCR_EL0", "PMCR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b001, Access::RW, "PMCNTENSET_EL0", "PMCNTENSET_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b010, Access::RW, "PMCNTENCLR_EL0", "PMCNTENCLR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b011, Access::RW, "PMOVSCLR_EL0", "PMOVSCLR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b100, Access::WO, "PMSWINC_EL0", "PMSWINC_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b101, Access::RW, "PMSELR_EL0", "PMSELR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b110, Access::RO, "PMCEID0_EL0", "PMCEID0_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1100, 0b111, Access::RO, "PMCEID1_EL0", "PMCEID1_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1101, 0b000, Access::RW, "PMCCNTR_EL0", "PMCCNTR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1101, 0b001, Access::RW, "PMXEVTYPER_EL0", "PMCCFILTR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1101, 0b001, Access::RW, "PMXEVTYPER_EL0", "PMEVTYPER_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1101, 0b010, Access::RW, "PMXEVCNTR_EL0", "PMEVCNTR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1110, 0b000, Access::RW, "PMUSERENR_EL0", "PMUSERENR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1001, 0b1110, 0b011, Access::RW, "PMOVSSET_EL0", "PMOVSSET_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0000, 0b010, Access::RW, "TPIDR_EL0", "TPIDR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0000, 0b011, Access::RW, "TPIDRRO_EL0", "TPIDRRO_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0000, 0b101, Access::RW, "TPIDR2_EL0", "TPIDR2_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL0", "SCXTNUM_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b000, Access::RW, "AMCR_EL0", "AMCR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b001, Access::RO, "AMCFGR_EL0", "AMCFGR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b010, Access::RO, "AMCGCR_EL0", "AMCGCR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b011, Access::RW, "AMUSERENR_EL0", "AMUSERENR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b100, Access::RW, "AMCNTENCLR0_EL0", "AMCNTENCLR0_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b101, Access::RW, "AMCNTENSET0_EL0", "AMCNTENSET0_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0010, 0b110, Access::RO, "AMCG1IDR_EL0", "AMCG1IDR_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0011, 0b000, Access::RW, "AMCNTENCLR1_EL0", "AMCNTENCLR1_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1101, 0b0011, 0b001, Access::RW, "AMCNTENSET1_EL0", "AMCNTENSET1_EL0"),
    // 11 011 1101 010:m[3] m[2:0] RW AMEVCNTR0<n>_EL0 AMEVCNTR0_EL0[]
    // 11 011 1101 011:m[3] m[2:0] RO AMEVTYPER0<n>_EL0 AMEVTYPER0_EL0[]
    // 11 011 1101 110:m[3] m[2:0] RW AMEVCNTR1<n>_EL0 AMEVCNTR1_EL0[]
    // 11 011 1101 111:m[3] m[2:0] RW AMEVTYPER1<n>_EL0 AMEVTYPER1_EL0[]
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0000, 0b000, Access::RW, "CNTFRQ_EL0", "CNTFRQ_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0000, 0b001, Access::Unspecified, "CNTPCT_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0000, 0b010, Access::Unspecified, "CNTVCT_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0000, 0b101, Access::Unspecified, "CNTPCTSS_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0000, 0b110, Access::Unspecified, "CNTVCTSS_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b000, Access::Unspecified, "CNTHP_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b000, Access::Unspecified, "CNTHPS_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b000, Access::Unspecified, "CNTP_TVAL_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTHP_CTL_EL2", "CNTHPS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTHP_CTL_EL2", "CNTHP_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTHP_CTL_EL2", "CNTP_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTHPS_CTL_EL2", "CNTHPS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTHPS_CTL_EL2", "CNTHP_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTHPS_CTL_EL2", "CNTP_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTP_CTL_EL0", "CNTHPS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTP_CTL_EL0", "CNTHP_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b001, Access::RW, "CNTP_CTL_EL0", "CNTP_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTHP_CVAL_EL2", "CNTHPS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTHP_CVAL_EL2", "CNTHP_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTHP_CVAL_EL2", "CNTP_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTHPS_CVAL_EL2", "CNTHPS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTHPS_CVAL_EL2", "CNTHP_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTHPS_CVAL_EL2", "CNTP_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTP_CVAL_EL0", "CNTHPS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTP_CVAL_EL0", "CNTHP_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0010, 0b010, Access::RW, "CNTP_CVAL_EL0", "CNTP_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b000, Access::Unspecified, "CNTHV_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b000, Access::Unspecified, "CNTHVS_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b000, Access::Unspecified, "CNTV_TVAL_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTHV_CTL_EL2", "CNTHVS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTHV_CTL_EL2", "CNTHV_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTHV_CTL_EL2", "CNTV_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTHVS_CTL_EL2", "CNTHVS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTHVS_CTL_EL2", "CNTHV_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTHVS_CTL_EL2", "CNTV_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTV_CTL_EL0", "CNTHVS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTV_CTL_EL0", "CNTHV_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b001, Access::RW, "CNTV_CTL_EL0", "CNTV_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTHV_CVAL_EL2", "CNTHVS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTHV_CVAL_EL2", "CNTHV_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTHV_CVAL_EL2", "CNTV_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTHVS_CVAL_EL2", "CNTHVS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTHVS_CVAL_EL2", "CNTHV_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTHVS_CVAL_EL2", "CNTV_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTV_CVAL_EL0", "CNTHVS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTV_CVAL_EL0", "CNTHV_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b0011, 0b010, Access::RW, "CNTV_CVAL_EL0", "CNTV_CVAL_EL0"),
    // 11 011 1110 10:m[4:3] m[2:0] RW PMEVCNTR<n>_EL0 PMEVCNTR_EL0[]
    Aarch64KvmRegister::new(0b11, 0b011, 0b1110, 0b1111, 0b111, Access::RW, "PMCCFILTR_EL0", "PMCCFILTR_EL0"),
    // 11 011 1110 11:m[4:3] m[2:0] RW PMEVTYPER<n>_EL0 PMEVTYPER_EL0[]
    Aarch64KvmRegister::new(0b11, 0b100, 0b0000, 0b0000, 0b000, Access::RO, "VPIDR_EL2", "MIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0000, 0b0000, 0b000, Access::RW, "VPIDR_EL2", "VPIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0000, 0b0000, 0b101, Access::RO, "VMPIDR_EL2", "MPIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0000, 0b0000, 0b101, Access::RW, "VMPIDR_EL2", "VMPIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL2", "SCTLR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0000, 0b001, Access::RW, "ACTLR_EL2", "ACTLR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b000, Access::RW, "HCR_EL2", "HCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b001, Access::RW, "MDCR_EL2", "MDCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b010, Access::RW, "CPTR_EL2", "CPTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b011, Access::RW, "HSTR_EL2", "HSTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b100, Access::RW, "HFGRTR_EL2", "HFGRTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b101, Access::RW, "HFGWTR_EL2", "HFGWTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b110, Access::RW, "HFGITR_EL2", "HFGITR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0001, 0b111, Access::RW, "HACR_EL2", "HACR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL2", "ZCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0010, 0b001, Access::RW, "TRFCR_EL2", "TRFCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0010, 0b010, Access::RW, "HCRX_EL2", "HCRX_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0010, 0b101, Access::RW, "SMPRIMAP_EL2", "SMPRIMAP_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL2", "SMCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0001, 0b0011, 0b001, Access::RW, "SDER32_EL2", "SDER32_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL2", "TTBR0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0000, 0b001, Access::RW, "TTBR1_EL2", "TTBR1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL2", "TCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0001, 0b000, Access::RW, "VTTBR_EL2", "VTTBR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0001, 0b010, Access::RW, "VTCR_EL2", "VTCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0010, 0b000, Access::RW, "VNCR_EL2", "VNCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0110, 0b000, Access::RW, "VSTTBR_EL2", "VSTTBR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0010, 0b0110, 0b010, Access::RW, "VSTCR_EL2", "VSTCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0011, 0b0000, 0b000, Access::RW, "DACR32_EL2", "DACR32_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0011, 0b0001, 0b100, Access::RW, "HDFGRTR_EL2", "HDFGRTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0011, 0b0001, 0b101, Access::RW, "HDFGWTR_EL2", "HDFGWTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0011, 0b0001, 0b110, Access::RW, "HAFGRTR_EL2", "HAFGRTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL1", "SPSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL1", "SPSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL2", "SPSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL2", "SPSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL1", "ELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL1", "ELR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL2", "ELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL2", "ELR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0001, 0b000, Access::RW, "SP_EL1", "SP_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0011, 0b000, Access::RW, "SPSR_irq", "SPSR_irq"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0011, 0b001, Access::RW, "SPSR_abt", "SPSR_abt"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0011, 0b010, Access::RW, "SPSR_und", "SPSR_und"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0100, 0b0011, 0b011, Access::RW, "SPSR_fiq", "SPSR_fiq"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0000, 0b001, Access::RW, "IFSR32_EL2", "IFSR32_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL2", "AFSR0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL2", "AFSR1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL1", "ESR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL1", "ESR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL2", "ESR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL2", "ESR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0010, 0b011, Access::RW, "VSESR_EL2", "VSESR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0011, 0b000, Access::RW, "FPEXC32_EL2", "FPEXC32_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL1", "TFSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL1", "TFSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL2", "TFSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL2", "TFSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL1", "FAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL1", "FAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL2", "FAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL2", "FAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b0110, 0b0000, 0b100, Access::RW, "HPFAR_EL2", "HPFAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1001, 0b1001, 0b000, Access::RW, "PMSCR_EL2", "PMSCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL2", "MAIR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL2", "AMAIR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0100, 0b000, Access::RW, "MPAMHCR_EL2", "MPAMHCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0100, 0b001, Access::RW, "MPAMVPMV_EL2", "MPAMVPMV_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0101, 0b000, Access::RW, "MPAM2_EL2", "MPAM2_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b000, Access::RW, "MPAMVPM0_EL2", "MPAMVPM0_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b001, Access::RW, "MPAMVPM1_EL2", "MPAMVPM1_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b010, Access::RW, "MPAMVPM2_EL2", "MPAMVPM2_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b011, Access::RW, "MPAMVPM3_EL2", "MPAMVPM3_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b100, Access::RW, "MPAMVPM4_EL2", "MPAMVPM4_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b101, Access::RW, "MPAMVPM5_EL2", "MPAMVPM5_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b110, Access::RW, "MPAMVPM6_EL2", "MPAMVPM6_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1010, 0b0110, 0b111, Access::RW, "MPAMVPM7_EL2", "MPAMVPM7_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL2", "VBAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b0000, 0b001, Access::RO, "RVBAR_EL2", "RVBAR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b0000, 0b010, Access::RW, "RMR_EL2", "RMR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b0001, 0b001, Access::RW, "VDISR_EL2", "VDISR_EL2"),
    // 11 100 1100 1000 0:m[1:0] RW ICH_AP0R<m>_EL2 ICH_AP0R_EL2[]
    // 11 100 1100 1001 0:m[1:0] RW ICH_AP1R<m>_EL2 ICH_AP1R_EL2[]
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1001, 0b101, Access::RW, "ICC_SRE_EL2", "ICC_SRE_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1011, 0b000, Access::RW, "ICH_HCR_EL2", "ICH_HCR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1011, 0b001, Access::RO, "ICH_VTR_EL2", "ICH_VTR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1011, 0b010, Access::RO, "ICH_MISR_EL2", "ICH_MISR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1011, 0b011, Access::RO, "ICH_EISR_EL2", "ICH_EISR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1011, 0b101, Access::RO, "ICH_ELRSR_EL2", "ICH_ELRSR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1100, 0b1011, 0b111, Access::RW, "ICH_VMCR_EL2", "ICH_VMCR_EL2"),
    // 11 100 1100 110:m[3] m[2:0] RW ICH_LR<m>_EL2 ICH_LR_EL2[]
    Aarch64KvmRegister::new(0b11, 0b100, 0b1101, 0b0000, 0b001, Access::RW, "CONTEXTIDR_EL2", "CONTEXTIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1101, 0b0000, 0b010, Access::RW, "TPIDR_EL2", "TPIDR_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL2", "SCXTNUM_EL2"),
    // 11 100 1101 100:m[3] m[2:0] RW AMEVCNTVOFF0<n>_EL2 AMEVCNTVOFF0_EL2[]
    // 11 100 1101 101:m[3] m[2:0] RW AMEVCNTVOFF1<n>_EL2 AMEVCNTVOFF1_EL2[]
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0000, 0b011, Access::RW, "CNTVOFF_EL2", "CNTVOFF_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0000, 0b110, Access::RW, "CNTPOFF_EL2", "CNTPOFF_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0001, 0b000, Access::RW, "CNTHCTL_EL2", "CNTHCTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0010, 0b000, Access::Unspecified, "CNTHP_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0010, 0b001, Access::RW, "CNTHP_CTL_EL2", "CNTHP_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0010, 0b010, Access::RW, "CNTHP_CVAL_EL2", "CNTHP_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0011, 0b000, Access::Unspecified, "CNTHV_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0011, 0b001, Access::RW, "CNTHV_CTL_EL2", "CNTHV_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0011, 0b010, Access::RW, "CNTHV_CVAL_EL2", "CNTHV_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0100, 0b000, Access::Unspecified, "CNTHVS_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0100, 0b001, Access::RW, "CNTHVS_CTL_EL2", "CNTHVS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0100, 0b010, Access::RW, "CNTHVS_CVAL_EL2", "CNTHVS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0101, 0b000, Access::Unspecified, "CNTHPS_TVAL_EL2", "-"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0101, 0b001, Access::RW, "CNTHPS_CTL_EL2", "CNTHPS_CTL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b100, 0b1110, 0b0101, 0b010, Access::RW, "CNTHPS_CVAL_EL2", "CNTHPS_CVAL_EL2"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL1", "SCTLR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0001, 0b0000, 0b010, Access::RW, "CPACR_EL1", "CPACR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL1", "ZCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0001, 0b0010, 0b001, Access::RW, "TRFCR_EL1", "TRFCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL1", "SMCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL1", "TTBR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0010, 0b0000, 0b001, Access::RW, "TTBR1_EL1", "TTBR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL1", "TCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL1", "SPSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL1", "ELR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL1", "AFSR0_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL1", "AFSR1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL1", "ESR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL1", "TFSR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL1", "FAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1001, 0b1001, 0b000, Access::RW, "PMSCR_EL1", "PMSCR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL1", "MAIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL1", "AMAIR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1010, 0b0101, 0b000, Access::RW, "MPAM1_EL1", "MPAM1_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL1", "VBAR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1101, 0b0000, 0b001, Access::RW, "CONTEXTIDR_EL1", "CONTEXTIDR_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL1", "SCXTNUM_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0001, 0b000, Access::RW, "CNTKCTL_EL1", "CNTKCTL_EL1"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0010, 0b000, Access::Unspecified, "CNTP_TVAL_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0010, 0b001, Access::RW, "CNTP_CTL_EL0", "CNTP_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0010, 0b010, Access::RW, "CNTP_CVAL_EL0", "CNTP_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0011, 0b000, Access::Unspecified, "CNTV_TVAL_EL0", "-"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0011, 0b001, Access::RW, "CNTV_CTL_EL0", "CNTV_CTL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b101, 0b1110, 0b0011, 0b010, Access::RW, "CNTV_CVAL_EL0", "CNTV_CVAL_EL0"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0000, 0b000, Access::RW, "SCTLR_EL3", "SCTLR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0000, 0b001, Access::RW, "ACTLR_EL3", "ACTLR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0001, 0b000, Access::RW, "SCR_EL3", "SCR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0001, 0b001, Access::RW, "SDER32_EL3", "SDER32_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0001, 0b010, Access::RW, "CPTR_EL3", "CPTR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0010, 0b000, Access::RW, "ZCR_EL3", "ZCR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0010, 0b110, Access::RW, "SMCR_EL3", "SMCR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0001, 0b0011, 0b001, Access::RW, "MDCR_EL3", "MDCR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0010, 0b0000, 0b000, Access::RW, "TTBR0_EL3", "TTBR0_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0010, 0b0000, 0b010, Access::RW, "TCR_EL3", "TCR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0010, 0b0001, 0b100, Access::RW, "GPTBR_EL3", "GPTBR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0010, 0b0001, 0b110, Access::RW, "GPCCR_EL3", "GPCCR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0100, 0b0000, 0b000, Access::RW, "SPSR_EL3", "SPSR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0100, 0b0000, 0b001, Access::RW, "ELR_EL3", "ELR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0100, 0b0001, 0b000, Access::RW, "SP_EL2", "SP_EL2"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0101, 0b0001, 0b000, Access::RW, "AFSR0_EL3", "AFSR0_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0101, 0b0001, 0b001, Access::RW, "AFSR1_EL3", "AFSR1_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0101, 0b0010, 0b000, Access::RW, "ESR_EL3", "ESR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0101, 0b0110, 0b000, Access::RW, "TFSR_EL3", "TFSR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0110, 0b0000, 0b000, Access::RW, "FAR_EL3", "FAR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b0110, 0b0000, 0b101, Access::RW, "MFAR_EL3", "MFAR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1010, 0b0010, 0b000, Access::RW, "MAIR_EL3", "MAIR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1010, 0b0011, 0b000, Access::RW, "AMAIR_EL3", "AMAIR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1010, 0b0101, 0b000, Access::RW, "MPAM3_EL3", "MPAM3_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1100, 0b0000, 0b000, Access::RW, "VBAR_EL3", "VBAR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1100, 0b0000, 0b001, Access::RO, "RVBAR_EL3", "RVBAR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1100, 0b0000, 0b010, Access::RW, "RMR_EL3", "RMR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1100, 0b1100, 0b100, Access::RW, "ICC_CTLR_EL3", "ICC_CTLR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1100, 0b1100, 0b101, Access::RW, "ICC_SRE_EL3", "ICC_SRE_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1100, 0b1100, 0b111, Access::RW, "ICC_IGRPEN1_EL3", "ICC_IGRPEN1_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1101, 0b0000, 0b010, Access::RW, "TPIDR_EL3", "TPIDR_EL3"),
    Aarch64KvmRegister::new(0b11, 0b110, 0b1101, 0b0000, 0b111, Access::RW, "SCXTNUM_EL3", "SCXTNUM_EL3"),
    Aarch64KvmRegister::new(0b11, 0b111, 0b1110, 0b0010, 0b000, Access::Unspecified, "CNTPS_TVAL_EL1", "-"),
    Aarch64KvmRegister::new(0b11, 0b111, 0b1110, 0b0010, 0b001, Access::RW, "CNTPS_CTL_EL1", "CNTPS_CTL_EL1"),
    Aarch64KvmRegister::new(0b11, 0b111, 0b1110, 0b0010, 0b010, Access::RW, "CNTPS_CVAL_EL1", "CNTPS_CVAL_EL1"),
];
